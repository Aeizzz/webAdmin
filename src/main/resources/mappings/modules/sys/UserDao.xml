<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tepusoft.modules.sys.dao.UserDao">
	<sql id="userColumns">
		a.id,
		a.company_id AS "company.id",
		a.office_id AS "office.id",
		a.login_name,
		a.password,
		a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,

		c.name AS "company.name",
		c.parent_id AS "company.parent.id",
		c.parent_ids AS "company.parentIds",
		-- ca.id AS "company.area.id",
		-- ca.name AS "company.area.name",
		-- ca.parent_id AS "company.area.parent.id",
		-- ca.parent_ids AS "company.area.parentIds",
		o.name AS "office.name",
		o.parent_id AS "office.parent.id",
		o.parent_ids AS "office.parentIds"
		-- , oa.id AS "office.area.id",
		-- oa.name AS "office.area.name",
		-- oa.parent_id AS "office.area.parent.id",
		-- oa.parent_ids AS "office.area.parentIds"
		<!-- ,
        r.id AS "roleList.id",
        r.office_id AS "roleList.office.id",
        r.name AS "roleList.name",
        r.enname AS "roleList.enname",
        r.role_type AS "roleList.roleType",
        r.data_scope AS "roleList.dataScope" -->
	</sql>

	<sql id="userJoins">
		LEFT JOIN sys_office c ON c.id = a.company_id
		-- LEFT JOIN sys_area ca ON ca.id = c.area_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		-- LEFT JOIN sys_area oa ON oa.id = o.area_id
		<!--
        LEFT JOIN sys_user_role ur ON ur.user_id = a.id
        LEFT JOIN sys_role r ON r.id = ur.role_id -->
	</sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.id = #{id}
	</select>

	<!-- 根据编号获得用户 -->
	<select id="getUser" resultType="User">
		SELECT
			a.id,
			a.company_id AS "company.id",
			a.office_id AS "office.id",
			a.login_name,
			a.password,
			a.no,
			a.name,
			a.email,
			a.phone,
			a.mobile,
			a.user_type
		FROM sys_user a
		WHERE a.id = #{id}
	</select>


	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User" parameterType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		<if test="role != null and role.id != null and role.id != ''">
			JOIN sys_user_role ur ON ur.user_id = a.id AND ur.role_id = #{role.id}
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="company != null and company.id != null and company.id != ''">
			AND (c.id = #{company.id} OR c.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>
					<if test="dbName == 'mssql'">'%,'+#{company.id}+',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
					<if test="dbName == 'mssql'">'%,'+#{office.id}+',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY c.code, o.code, a.name
			</otherwise>
		</choose>
	</select>
	
	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.office_id = #{office.id}
		ORDER BY a.name
	</select>
	<!-- 根据OfficeId或者用户名获取用户 -->
	<select id="findUserByDeptOrName" resultType="User" >
		SELECT
		a.id, a.name, a.login_name
		FROM sys_user a
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN sys_office dep ON dep.id = a.department_id
		<if test="role != null and role.id != null and role.id != ''">
			JOIN sys_user_role ur ON ur.user_id = a.id AND ur.role_id = #{role.id}
		</if>
		WHERE a.del_flag ='0'
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE '%,'||#{office.id}||',%')
		</if>
		<if test="name != null and name != ''">
			AND a.name like '%'||#{name}||'%'
		</if>
		<if test="departmentId != null and departmentId != ''">
			AND (dep.id = #{departmentId} OR dep.parent_ids LIKE '%,'||#{departmentId}||',%')
		</if>
		ORDER BY a.name
	</select>
	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY c.code, o.code, a.name
	</select>
	<!-- 根据角色和组织获取用户列表 -->
	<select id="findByRoleIdAndOfficeId" resultType="User">
		SELECT
			a.id AS "id",
			a.login_name AS "loginName"
		FROM sys_user a
			LEFT JOIN sys_user_role ur ON ur.user_id = a.id
		WHERE a.del_flag = '0'
			AND a.office_id = #{1}
			AND ur.role_id = #{0}
	</select>

	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
			id, 
			company_id, 
			office_id, 
			login_name, 
			password, 
			no, 
			name, 
			email, 
			phone, 
			mobile, 
			user_type, 
			create_by, 
			create_date, 
			update_by, 
			update_date,
			remarks,
			login_flag, 
			photo, 
			del_flag,
			department_id,
			working_time,
			education,
			post_id,
			post_level_id,
			post_grade_id,
			salary,
			post_level_grade
		) VALUES (
			#{id},
			#{company.id},
			#{office.id},
			#{loginName},
			#{password},
			#{no},
			#{name},
			#{email},
			#{phone},
			#{mobile},
			#{userType},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{loginFlag},
			#{photo},
			#{delFlag},
			#{departmentId},
			#{workTime},
			#{education},
			#{post.id},
			#{postLevelId},
			#{postGradeId},
			#{salary},
			#{postLevelGrade}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET 
			company_id = #{company.id},
			office_id = #{office.id},
			login_name = #{loginName},
			password = #{password},
			no = #{no},
			name = #{name},
			email = #{email},
			phone = #{phone},
			mobile = #{mobile},
			user_type = #{userType},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			login_flag = #{loginFlag},
			photo = #{photo},
			department_id = #{departmentId},
			working_time = #{workTime},
			education = #{education},
			post_id = #{post.id},
			post_level_id = #{postLevelId},
			post_grade_id = #{postGradeId},
			salary = #{salary},
			post_level_grade = #{postLevelGrade}
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id}
			<if test="dbName != 'mssql'">
			FROM dual
			</if>
		</foreach>
	</insert>
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET 
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			photo = #{photo}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET 
			password = #{password} 
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET 
			login_ip = #{loginIp}, 
			login_Date = #{loginDate} 
		WHERE id = #{id}
	</update>

	<!-- 逻辑删除用户 -->
	<update id="delete">
		UPDATE sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<!-- 根据部门，角色获取相应的人员 -->
	<select id="getByOfficeAndRole" resultType="User" >
		SELECT
		a.id,
		a.company_id AS "company.id",
		a.office_id AS "office.id",
		a.login_name,
		a.password,
		a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.post_level_grade AS "postLevelGrade",
		a.login_flag,
		a.photo,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag

		FROM sys_user a
		left join sys_user_role b on a.id = b.user_id
		left join sys_role c on c.id = b.role_id
		where a.del_flag = '0'
		and c.enname=#{ename}
		<if test="officeId != null and officeId != ''">
			AND a.office_id=#{officeId}
		</if>
	</select>

	<!-- 给 -->
	<insert id="insertSpecialUserRole">
		INSERT INTO sys_user_role
					(user_id, role_id)
		VALUES (#{userId},'b62e45ba3ee24c16a7bbe3b2b1373462')
	</insert>
</mapper>